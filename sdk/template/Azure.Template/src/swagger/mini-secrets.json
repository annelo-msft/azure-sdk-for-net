{
  "swagger": "2.0",
  "info": {
    "title": "TemplateClient",
    "description": "The key vault client performs cryptographic key operations and vault operations against the Key Vault service.",
    "version": "7.0"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{vaultBaseUrl}",
    "useSchemePrefix": false,
    "positionInOperation": "first",
    "parameters": [
      {
        "name": "vaultBaseUrl",
        "description": "The vault name, for example https://myvault.vault.azure.net.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true,
        "x-ms-parameter-location": "client"
      }
    ]
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/secrets/{secret-name}": {
      "get": {
        "tags": [
          "Secrets"
        ],
        "operationId": "GetSecret",
        "summary": "Get a specified secret from a given key vault.",
        "description": "The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission.",
        "parameters": [
          {
            "name": "secret-name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the secret."
          },
          {
            "name": "optional-header-param-string",
            "in": "header",
            "type": "string",
            "description": "An optional parameter."
          },
          {
            "name": "optional-header-param-int",
            "in": "header",
            "type": "integer",
            "description": "An optional parameter."
          },
          {
            "name": "optional-header-param-bool",
            "in": "header",
            "type": "boolean",
            "description": "An optional parameter."
          },
          {
            "name": "optional-header-param-number",
            "in": "header",
            "type": "number",
            "description": "An optional parameter."
          },
          {
            "name": "optional-query-param-string",
            "in": "query",
            "type": "string",
            "description": "An optional parameter."
          },
          {
            "name": "optional-query-param-int",
            "in": "query",
            "type": "integer",
            "description": "An optional parameter."
          },
          {
            "name": "optional-query-param-bool",
            "in": "query",
            "type": "boolean",
            "description": "An optional parameter."
          },
          {
            "name": "optional-query-param-number",
            "in": "query",
            "type": "number",
            "description": "An optional parameter."
          },
          {
            "name": "optional-header-param-string-default",
            "in": "header",
            "type": "string",
            "default": "headerDefault",
            "description": "An optional parameter."
          },
          {
            "name": "optional-header-param-int-default",
            "in": "header",
            "type": "integer",
            "default": 20,
            "description": "An optional parameter."
          },
          {
            "name": "optional-query-param-string-default",
            "in": "query",
            "type": "string",
            "default": "queryDefault",
            "description": "An optional parameter."
          },
          {
            "name": "optional-query-param-int-default",
            "in": "query",
            "type": "integer",
            "default": 40,
            "description": "An optional parameter."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved secret.",
            "schema": {
              "$ref": "#/definitions/SecretBundle"
            }
          },
          "default": {
            "description": "Key Vault error response describing why the operation failed."
          }
        }
      }
    }
  },
  "definitions": {
    "SecretBundle": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The secret value."
        },
        "id": {
          "type": "string",
          "description": "The secret id."
        },
        "contentType": {
          "type": "string",
          "description": "The content type of the secret."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application specific metadata in the form of key-value pairs."
        },
        "kid": {
          "type": "string",
          "readOnly": true,
          "description": "If this is a secret backing a KV certificate, then this field specifies the corresponding key backing the KV certificate."
        },
        "managed": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if the secret's lifetime is managed by key vault. If this is a secret backing a certificate, then managed will be true."
        }
      },
      "description": "A secret consisting of a value, id and its attributes."
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  }
}
