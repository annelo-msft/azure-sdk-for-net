// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Containers.ContainerRegistry.Models
{
    public partial class TagAttributes
    {
        internal static TagAttributes DeserializeTagAttributes(JsonElement element)
        {
            Optional<string> registry = default;
            Optional<string> imageName = default;
            Optional<TagAttributes> tag = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("registry"))
                {
                    registry = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("imageName"))
                {
                    imageName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("tag"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    tag = TagAttributes.DeserializeTagAttributes(property.Value);
                    continue;
                }
            }
            return new TagAttributes(registry.Value, imageName.Value, tag.Value);
        }
    }
}
                continue;
                }
                if (property.NameEquals("lastUpdateTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastUpdateTime = property.Value.GetDateTime();
                    continue;
                }
                if (property.NameEquals("signed"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    signed = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("changeableAttributes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    changeableAttributes = ContentPermissions.DeserializeContentPermissions(property.Value);
                    continue;
                }
            }
            return new TagAttributes(name.Value, digest.Value, createdTime, lastUpdateTime, Optional.ToNullable(signed), changeableAttributes.Value);
        }
    }
}
