// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Containers.ContainerRegistry.Models
{
    public partial class RepositoryAttributes
    {
        internal static RepositoryAttributes DeserializeRepositoryAttributes(JsonElement element)
        {
            Optional<string> registry = default;
            Optional<string> imageName = default;
            Optional<DateTime> createdTime = default;
            Optional<DateTime> lastUpdateTime = default;
            Optional<int> manifestCount = default;
            Optional<int> tagCount = default;
            Optional<ContentPermissions> changeableAttributes = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("registry"))
                {
                    registry = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("imageName"))
                {
                    imageName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("createdTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    createdTime = property.Value.GetDateTime();
                    continue;
                }
                if (property.NameEquals("lastUpdateTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lastUpdateTime = property.Value.GetDateTime();
                    continue;
                }
                if (property.NameEquals("manifestCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    manifestCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("tagCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    tagCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("changeableAttributes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    changeableAttributes = ContentPermissions.DeserializeContentPermissions(property.Value);
                    continue;
                }
            }
            return new RepositoryAttributes(registry.Value, imageName.Value, createdTime, lastUpdateTime, Optional.ToNullable(manifestCount), Optional.ToNullable(tagCount), changeableAttributes.Value);
        }
    }
}
